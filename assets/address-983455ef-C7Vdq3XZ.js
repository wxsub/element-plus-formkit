import{dM as y,d as v,a as g,ag as h,o as b,az as V,a7 as p,by as k}from"./app-CMEiSD4c.js";import{E as P}from"./index-B3salax1.js";import"./index-YWL7dMNb.js";import"./strings-BT7v8NhK.js";import"./index-BX-mkNb2.js";import"./index-DNUnGg2_.js";import"./isEqual-CbtFw5pc.js";import"./index-Bkkun1CM.js";import"./index-C52fe6eJ.js";import"./index-DXRi0TQ7.js";import"./index-DVIkItq5.js";const w=v({__name:"address",props:{labelKey:{type:String,default:"name"},valueKey:{type:String,default:"id"},level:{type:Number,default:1},cascaderProps:{type:Object,default:()=>{}},modelValue:{type:[String,Number,Array]},requester:{type:Function}},emits:["update:modelValue"],setup(m,{emit:d}){const e=m,i=d,n=g({get:()=>e.modelValue||(e.level>0?[]:null),set:a=>{i("update:modelValue",a)}}),c={lazy:!0,lazyLoad(a,l){const{level:t}=a,u=t==0?-1:a.value,r=[];f(u,t).then(s=>{const o=r.concat(s);l(o)}).catch(s=>{l(r)})},...e.cascaderProps},f=(a,l=1)=>new Promise(async(t,u)=>{try{if(e.requester){const r=await e.requester(a,l);if(Array.isArray(r)&&r.length>0){const s=r.map(o=>({value:o[e.valueKey]??o.value,label:o[e.labelKey]??o.label,leaf:o.leaf??l>=e.level}));t(s)}else t([]),console.warn("No data found for the given region.")}else t([]),console.warn("requester is not defined. Please provide a method to fetch address data in the props.")}catch(r){u(r)}});return(a,l)=>(b(),h(p(P),V({props:c,modelValue:p(n),"onUpdate:modelValue":l[0]||(l[0]=t=>k(n)?n.value=t:null),key:m.level},a.$attrs),null,16,["modelValue"]))}}),x=y(w,[["__file","/home/runner/work/element-plus-formkit/element-plus-formkit/src/modules/address.vue"]]);export{x as default};
