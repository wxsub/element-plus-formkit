import{cL as h}from"./index-fcef7efe-Cx8TW6Jf.js";import{E as g}from"./index-Dz47qYZc.js";import{d as b,$ as V,a as k,G as w,o as q,C as P,u as i,y as A}from"./app-D_2IkvLF.js";import"./index-BVvb9skI.js";import"./strings-DD5QiEz8.js";import"./index-D8obs_VI.js";import"./index-v8HcONvJ.js";import"./isEqual-w_kfwtk5.js";import"./index-BSpCoGCq.js";import"./index-OYSA67y-.js";import"./index-D0MHb6x3.js";import"./index-BiBqBxkC.js";const K=b({__name:"address",props:{labelKey:{type:String,default:"name"},valueKey:{type:String,default:"id"},level:{type:Number,default:1},cascaderProps:{type:Object,default:()=>{}},modelValue:{type:[String,Number,Array]},requester:{type:Function}},emits:["update:modelValue"],setup(d,{emit:c}){const e=d,m=V(),f=c,n=k({get:()=>e.modelValue||(e.level>0?[]:null),set:t=>{f("update:modelValue",t)}}),y={lazy:!0,lazyLoad(t,a){const{level:l}=t,u=l==0?-1:t.value,r=[];v(u,l).then(o=>{const p=r.concat(o);a(p)}).catch(o=>{a(r)})},...e.cascaderProps},v=(t,a=1)=>new Promise(async(l,u)=>{try{if(e.requester){const r=await e.requester(t,a),o=typeof m.handler=="function"?m.handler(r):r;if(Array.isArray(o)&&o.length>0){const p=o.map(s=>({value:s[e.valueKey]??s.value,label:s[e.labelKey]??s.label,leaf:s.leaf??a>=e.level}));l(p)}else l([]),console.warn("No data found for the given region.")}else l([]),console.warn("requester is not defined. Please provide a method to fetch address data in the props.")}catch(r){u(r),console.warn(r)}});return(t,a)=>(q(),w(i(g),P({props:y,modelValue:i(n),"onUpdate:modelValue":a[0]||(a[0]=l=>A(n)?n.value=l:null),key:d.level},t.$attrs),null,16,["modelValue"]))}}),G=h(K,[["__file","/home/runner/work/element-plus-formkit/element-plus-formkit/src/modules/address.vue"]]);export{G as default};
