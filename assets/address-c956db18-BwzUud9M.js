import{dM as h,d as g,at as b,a as V,ag as k,o as w,az as q,a7 as i,by as P}from"./app-BM1uspRd.js";import{E as A}from"./index-DwGXnSri.js";import"./index-DLrntqbs.js";import"./strings-BVOz_ZbB.js";import"./index-NzNnSAZh.js";import"./index-X3_6HA2s.js";import"./isEqual-CJJk7dZ2.js";import"./index-DrRrQijJ.js";import"./index-CS2wh8aS.js";import"./index-DHvBvemQ.js";import"./index-3wu2xwy1.js";const K=g({__name:"address",props:{labelKey:{type:String,default:"name"},valueKey:{type:String,default:"id"},level:{type:Number,default:1},cascaderProps:{type:Object,default:()=>{}},modelValue:{type:[String,Number,Array]},requester:{type:Function}},emits:["update:modelValue"],setup(p,{emit:c}){const e=p,m=b(),f=c,n=V({get:()=>e.modelValue||(e.level>0?[]:null),set:a=>{f("update:modelValue",a)}}),y={lazy:!0,lazyLoad(a,t){const{level:l}=a,u=l==0?-1:a.value,r=[];v(u,l).then(o=>{const d=r.concat(o);t(d)}).catch(o=>{t(r)})},...e.cascaderProps},v=(a,t=1)=>new Promise(async(l,u)=>{try{if(e.requester){const r=await e.requester(a,t),o=typeof m.handler=="function"?m.handler(r):r;if(Array.isArray(o)&&o.length>0){const d=o.map(s=>({value:s[e.valueKey]??s.value,label:s[e.labelKey]??s.label,leaf:s.leaf??t>=e.level}));l(d)}else l([]),console.warn("No data found for the given region.")}else l([]),console.warn("requester is not defined. Please provide a method to fetch address data in the props.")}catch(r){u(r),console.warn(r)}});return(a,t)=>(w(),k(i(A),q({props:y,modelValue:i(n),"onUpdate:modelValue":t[0]||(t[0]=l=>P(n)?n.value=l:null),key:p.level},a.$attrs),null,16,["modelValue"]))}}),M=h(K,[["__file","/home/runner/work/element-plus-formkit/element-plus-formkit/src/modules/address.vue"]]);export{M as default};
